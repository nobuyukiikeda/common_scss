// 変数
$black: #222;
$red: #fa0000;
$link: #0099ff;

$textColor: $black;

$primary: #4a90e2;
$primaryLight: lighten($primary, 15%);
$primaryDark: darken($primary, 15%);

$gray: #999;
$grayDark: #555;
$grayLight: #ccc;

// ボーダースタイル
$border: 1px solid #ccc;

// 基本ゴシック
$gothic: -apple-system, 'ヒラギノ角ゴ Pro W3', 'Hiragino Kaku Gothic Pro',
  'メイリオ', Meiryo, '游ゴシック', YuGothic, Osaka, 'ＭＳ Ｐゴシック',
  'MS PGothic', Sans-Serif;
// 基本明朝
$mincho: '游明朝体', 'YuMincho', '游明朝', 'Yu Mincho', 'ヒラギノ明朝 Pro W6',
  'HiraMinPro-W6', 'ヒラギノ明朝 Pro W3', 'Hiragino Mincho Pro', 'ＭＳ 明朝',
  'MS Mincho';
// 端末標準英字フォント
$sansSerif: 'Trebuchet MS', 'Comic Sans MS', 'Verdana', 'Arial', 'Courier New',
  'sans-serif';
// 端末標準セリフ
$serif: 'Georgia', 'Times New Roman', 'Roman', 'serif';

$mq-breakpoints: (
  'xsmall': 374px,
  'small': 599px,
  'medium': 767px,
  'large': 1023px,
  'xlarge': 1199px,
);
$mq-breakpoints-x: (
  'xsmall': 375px,
  'small': 600px,
  'medium': 768px,
  'large': 1024px,
  'xlarge': 1200px,
);
@mixin mq($breakpoint: large) {
  @media screen and (max-width: #{map-get($mq-breakpoints, $breakpoint)}) {
    @content;
  }
}
@mixin mqx($breakpoint: large) {
  @media screen and (min-width: #{map-get($mq-breakpoints-x, $breakpoint)}) {
    @content;
  }
}

// クリアーフィックス
@mixin cf() {
  &::before {
    content: '';
    display: table;
  }
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

@mixin ba-block($width: 100%, $height: 100%) {
  display: block;
  content: '';
  width: $width;
  height: $height;
  position: absolute;
}

@mixin centering-elements($horizontal: true, $vertical: true) {
  position: absolute;
  @if $horizontal and $vertical {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  } @else if $horizontal {
    left: 50%;
    transform: translate(-50%, 0);
  } @else if $vertical {
    top: 50%;
    transform: translate(0, -50%);
  }
}

/******
イージング
******/
// Cubic
$easeInCubic: cubic-bezier(0.55, 0.055, 0.675, 0.19);
$easeOutCubic: cubic-bezier(0.215, 0.61, 0.355, 1);
$easeInOutCubic: cubic-bezier(0.645, 0.045, 0.355, 1);

// Circ
$easeInCirc: cubic-bezier(0.6, 0.04, 0.98, 0.335);
$easeOutCirc: cubic-bezier(0.075, 0.82, 0.165, 1);
$easeInOutCirc: cubic-bezier(0.785, 0.135, 0.15, 0.86);

// Expo
$easeInExpo: cubic-bezier(0.95, 0.05, 0.795, 0.035);
$easeOutExpo: cubic-bezier(0.19, 1, 0.22, 1);
$easeInOutExpo: cubic-bezier(1, 0, 0, 1);

// Quad
$easeInQuad: cubic-bezier(0.55, 0.085, 0.68, 0.53);
$easeOutQuad: cubic-bezier(0.25, 0.46, 0.45, 0.94);
$easeInOutQuad: cubic-bezier(0.455, 0.03, 0.515, 0.955);

// Quart
$easeInQuart: cubic-bezier(0.895, 0.03, 0.685, 0.22);
$easeOutQuart: cubic-bezier(0.165, 0.84, 0.44, 1);
$easeInOutQuart: cubic-bezier(0.77, 0, 0.175, 1);

// Quint
$easeInQuint: cubic-bezier(0.755, 0.05, 0.855, 0.06);
$easeOutQuint: cubic-bezier(0.23, 1, 0.32, 1);
$easeInOutQuint: cubic-bezier(0.86, 0, 0.07, 1);

// Sine
$easeInSine: cubic-bezier(0.47, 0, 0.745, 0.715);
$easeOutSine: cubic-bezier(0.39, 0.575, 0.565, 1);
$easeInOutSine: cubic-bezier(0.445, 0.05, 0.55, 0.95);

// Back
$easeInBack: cubic-bezier(0.6, -0.28, 0.735, 0.045);
$easeOutBack: cubic-bezier(0.175, 0.885, 0.32, 1.275);
$easeInOutBack: cubic-bezier(0.68, -0.55, 0.265, 1.55);
